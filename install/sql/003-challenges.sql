INSERT INTO categories VALUES
(1,1584860400,1,'Linux and miscellaneous','',1,1584860400,2147483647),
(2,1584860400,1,'Webapp exploitation','',1,1584860400,2147483647),
(3,1584860400,1,'Binary exploitation','',1,1584860400,2147483647),
(4,1584860400,1,'Cryptography','',1,1584860400,2147483647),
(5,1584860400,1,'Final challenges','',1,1584860400,2147483647);

INSERT INTO challenges VALUES
(1,1584860400,1,'introflag',1,'Read the homepage!',1,1584860400,2147483647,'ECS{W3LC0M3_0E08436ACF7DA35A9D508E7A3BF8690A}',0,1,50,0,10,0),
(2,1584860400,1,'linuxbasics',1,'Test your linux basics! SSH into [code single]linuxbasics@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Play around with the system and answer the following questions:\r\n\r\n1. What\'s your current working directory?\r\n2. Search the man pages. What command would you use to generate random permutations?\r\n3. On what day was /home/user/myfile.txt modified? Use the date format 2019-12-31\r\n4. How big is /home/user/myfile.txt, in kilobytes? Round to the nearest whole number.\r\n5. What user owns the file /home/user/myfile.txt?\r\n6. What\'s the 3-digit octal permissions of the file /home/user/myfile.txt? (e.g 777)\r\n7. What is the user id of \'admin\'?\r\n8. There\'s a user \'john\' on the system. Can he write to /home/user/myfile.txt?\r\n9. Can the \'admin\' user execute /home/user/myfile.txt?\r\n10. Which user on the system, except for you, root, admin and john, can execute /home/user/myfile.txt?\r\n11. /home/user/myfile.txt looks like a txt file, but it actually isn\'t. What kind of file is it?\r\n12. Change the ownership and permissions of /home/user/chme, so that you have full read-write-execute permissions, jade and rose can read the file only, and john cannot read write or execute the file.\r\n\r\nOnce you have figured out the answer to a question, run [code single]answer x[/code] to answer question number x.',1,1584860400,2147483647,'ECS{M45T3R1NG_TH3_8451C5_29D681ECC64D3BF68DCABFA2D24270DD}',0,1,200,0,10,0),
(3,1584860400,1,'linuxadv',1,'Time for some more advanced topics! SSH into [code single]linuxadv@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Play around with the system and do the following tasks. Once you\'re ready, run [code single]answer x[/code] to try to do the xth task.\r\n\r\n1. Try backgrounding this process and foregrounding it again.\r\n2. What\'s my PID?\r\n3. Send me a SIGUSR1 signal.\r\n4. Redirect my standard input to be the contents of /home/user/in.txt\r\n5. Redirect my standard error into /dev/null.\r\n6. Cat out the contents of /home/user/in.txt, grep for the lines that contain the lowercase letter \'a\', and pipe the result into me.\r\n7. Run [code single]. spawner[/code] to solve this challenge. I\'ve just spawned 5 background jobs. Find the correct one to foreground!',1,1584860400,2147483647,'ECS{R3D_GR33N_8LU3_A8E848A2EF5876D0CEC2779A8EBC75A7}',0,1,200,0,10,0),
(4,1584860400,1,'loganalysis',1,'You have some big log files, time to get some useful data out of them! SSH into [code single]loganalysis@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Play around with the system and answer the following questions:\r\n\r\n1. How many lines are in access.log?\r\n2. Using access.log, which IP tried to find information about Siemens?\r\n3. Using access.log, how many requests claim to be from a Windows 10 machine?\r\n4. Using access.log, how many unique IP made requests to the server?\r\n5. Using access.log, which IP made the most requests to the webserver?\r\n6. Using auth.log, which IP appeared the most amount of times in the file?\r\n7. Find the right "flag" in flags.txt. The flag should look like [code single]ECS{START_TAIL}[/code], where [code single]START[/code] only contains uppercase letters, numbers and underscores. [code single]TAIL[/code] is 32 characters long and only contains numbers and the upper case letters A-F. There should be no characters before or after the flag.\r\n\r\nOnce you have figured out the answer to a question, run [code single]answer x[/code] to answer question number x.',1,1584860400,2147483647,'ECS{3X4M1N3_3XTR4CT_3XTR4P0L4T3_3A7FB33B1BE13E7AC844524F94C4A6EE}',0,1,200,0,10,0),
(5,1584860400,1,'nmap',1,'There\'s a port on [code single]photon.rkevin.dev[/code], between [code single]50000[/code] and [code single]60000[/code]. Find it and examine the server version.',1,1584860400,2147483647,'ECS{R3C0NN41554NC3_D7302141C3757FC23EA3FA68DD812E12}',0,1,75,0,10,0),
(6,1584860400,1,'nc',1,'Practice how to use netcat to connect to and listen on ports.\r\n\r\nSSH into [code single]nc@photon.rkevin.dev[/code], with password [code single]REDACTED[/code].\r\n\r\nUse [code single]nc[/code] to connect to [code single]localhost[/code] port [code single]12345[/code] and follow the instructions. Your goal is to get a shell as [code single]admin[/code] and read [code single]/home/admin/flag[/code].',1,1584860400,2147483647,'ECS{LL3H5_35R3V3R_6DF3F987B4B326068CB4F686C87F6337}',0,1,75,0,10,0),
(7,1584860400,1,'addition',1,'John\'s homework is due soon! Help him do his homework! Connect to [code single]photon.rkevin.dev[/code] port [code single]30001[/code].',1,1584860400,2147483647,'ECS{N0W_W3_R3_T4LK1NG_47F0A66CE4EFB09F46AC93FE0B218E72}',0,1,100,0,10,0),
(8,1584860400,1,'binaryaddition',1,'John\'s in trouble yet again! Help him do his homework! Connect to [code single]photon.rkevin.dev[/code] port [code single]30002[/code].',1,1584860400,2147483647,'ECS{T4LKING_1N_B1N4RY_L1KE_4_PR0_6FE295FE8E77524832EBDFB1E7E3DCDA}',0,1,100,0,10,0),
(9,1584860400,1,'privesc1',1,'Find a way to escalate privileges from [code single]user[/code] to [code single]admin[/code]! SSH into [code single]privesc1@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Your goal is to read [code single]/home/admin/flag[/code].',1,1584860400,2147483647,'ECS{5UD0_M0R3_L1K3_5UD0N3_685C320822C764B02E0E180256EF364A}',0,1,100,0,10,0),
(10,1584860400,1,'privesc2',1,'Find a way to escalate privileges from [code single]user[/code] to [code single]admin[/code]! SSH into [code single]privesc2@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Your goal is to read [code single]/home/admin/flag[/code].',1,1584860400,2147483647,'ECS{TH1NK_TW1C3_83F0R3_Y0U_CR0N_33DB801E56AD5BF005219AB6D2420B3B}',0,1,150,0,10,0),
(11,1584860400,1,'privesc3',1,'Find a way to escalate privileges from [code single]user[/code] to [code single]admin[/code]! SSH into [code single]privesc3@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Your goal is to read [code single]/home/admin/flag[/code].',1,1584860400,2147483647,'ECS{P555555555555T_785A7C113CB263F60DDAABBD10F19674}',0,1,100,0,10,0),
(12,1584860400,1,'race',1,'A simple race condition. SSH into [code single]race@photon.rkevin.dev[/code], with password [code single]REDACTED[/code]. Your goal is to read the [code single]flag[/code] file in your home directory.\r\n\r\nNOTE: I won\'t be talking about how to solve this in class. Click [url=https://en.wikipedia.org/wiki/TOCTOU]here[/url] for a hint, or ask me in office hours.',1,1584860400,2147483647,'ECS{RUN_5P0T_RUN_FF99EC3FD4AD4016DB15B237FDE575B9}',0,1,200,0,10,0),
(13,1584860400,1,'strcmp',1,'Figure out my password of 20 lowercase letters. Connect to [code single]photon.rkevin.dev[/code] port [code single]30004[/code].\r\n\r\nNOTE: I won\'t be talking about how to solve this in class. Click [url=https://linux.die.net/man/3/strcmp]here[/url] or [url=https://en.wikipedia.org/wiki/Binary_search_algorithm]here[/url] for a hint, or ask me in office hours.',1,1584860400,2147483647,'ECS{81N4RY_534RCH_50AF9F479667C26EBF4EE74E956371D5}',0,1,150,0,10,0),
(14,1584860400,1,'timingsc',1,'A side channel timing attack. Connect to [code single]photon.rkevin.dev[/code] port [code single]30003[/code]. The code being run on the server side is provided below.\r\n\r\nNOTE: I won\'t be talking about how to solve this in class. Click [url=https://en.wikipedia.org/wiki/Timing_attack]here[/url] for a hint, or ask me in office hours.',1,1584860400,2147483647,'ECS{T1CK_T0CK_86EB9A0242E94E66DB372F75E1BCF415}',0,1,200,0,10,0),
(15,1584860400,1,'adminme',2,'Try and become administrator on this web application. I heard the developers have no idea how cookies work...\r\n\r\nClick [url=/webchal/adminme]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{15_4DM1N_TRU3_9C8861B05695569D3F67382254CD170B}',0,1,75,0,10,0),
(16,1584860400,1,'phpeval',2,'Write some PHP code! Once you gain code execution, explore the system a bit to find how to get the flag.\r\n\r\nClick [url=/webchal/phpeval]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{D00R_W1D3_0P3N_70B35DC02FD4F609EF7B76AC3875C5CE}',0,1,100,0,10,0),
(17,1584860400,1,'jsprog',2,'Write some Javascript code!\r\n\r\nClick [url=/webchal/jsprog]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{N0T_T0_83_C0NFU53D_W1TH_J4V4_32F28B8E6AD587739C20576B2BDA3828}',0,1,125,0,10,0),
(18,1584860400,1,'xss',2,'Basic Cross-Site Scripting (XSS) challenge. The cookie monster is monitoring the page. Steal their cookies!\r\n\r\nClick [url=/webchal/xss]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{N0M_N0M_N0M_C5B1ABC976B9851714588981280B9F66}',0,1,200,0,10,0),
(19,1584860400,1,'csrf',2,'Basic Cross-Site Request Forgery (CSRF) challenge. Try to trick the admin and grab the flag!\r\n\r\nClick [url=/webchal/csrf]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{1M4G1N3_TH15_8UT_D3L3T1NG_4LL_U53R5_B702F71E4C2139B5F1E9F3A32B8BACA3}',0,1,200,0,10,0),
(20,1584860400,1,'sqli',2,'SQL injection time! Break into the login page.\r\n\r\nClick [url=/webchal/sqli]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{H1_8088Y_94C0EE1CEB1EE342665E7833C728090B}',0,1,125,0,10,0),
(21,1584860400,1,'searchbar',2,'Another SQL injection challenge. See if you can grab the flag from the database.\r\n\r\nClick [url=/webchal/searchbar]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{50_TH4T5_WH3R3_MY_LUNCH_W3NT_D0E277745D6760E9B6FB2DEE6FAFA029}',0,1,225,0,10,0),
(22,1584860400,1,'bsqli',2,'Blind SQL injection. Find the [code single]admin[/code]\'s password!\r\n\r\nClick [url=/webchal/bsqli]here[/url] to start the challenge. For a hint, maybe consult the [code single]strcmp[/code] challenge?\r\n\r\n[i]NOTE:[/i] If you\'re using a programming language (like python) to solve the challenge, please also include the cookie [code single]beamsplitter_bsqli[/code] in your browser along with it. You can see the cookie in the Chrome developer tools.',1,1584860400,2147483647,'ECS{8L1ND_JU5T1C3_27A66B96BC14C3CC376AE06C4DDD8C75}',0,1,250,0,10,0),
(23,1584860400,1,'babylfi',2,'Local File Inclusion! See what you can gather from the system.\r\n\r\nClick [url=/webchal/babylfi]here[/url] to start the challenge. The stuff you learned from privilege escalation might help you identify important files on the system.',1,1584860400,2147483647,'ECS{P33K4800_B2618A84076474EA954D45580305D15D}',0,1,100,0,10,0),
(24,1584860400,1,'lfirce',2,'Can you take LFI vulnerabilities one step further and gain code execution? Your goal is to execute [code single]/getflag[/code].\r\n\r\nClick [url=/webchal/lfirce]here[/url] to start the challenge.\r\n\r\n[i]NOTE:[/i] If you\'re using curl to solve the challenge, please also include the cookie [code single]beamsplitter_lfirce[/code] in your browser along with it. You can see the cookie in the Chrome developer tools.',1,1584860400,2147483647,'ECS{1NCLUD3_4W4Y_T0_V1CT0RY_C7EC47874DDA96A398C1BC1B44391A2D}',0,1,300,0,10,0),
(25,1584860400,1,'stringy',3,'The flag is hidden in this program somewhere! Use a bit of GDB magic to find it!',1,1584860400,2147483647,'ECS{5TR1NGY_81T_0F_TH3_80W_B82B2D82E38B6250566C342A817052CD}',0,1,75,0,10,0),
(26,1584860400,1,'runme',3,'The flag is hidden in this program somewhere! Use a bit of GDB magic to find it!\r\n\r\nHint: You don\'t have to reverse engineer too much for this challenge. If you\'re doing calculations or writing a program to automate stuff, there\'s an easier solution using GDB!',1,1584860400,2147483647,'ECS{TH3R3_15_N0_35C4P3_8C39F7CE6283499E68FD6F4856A95A94}',0,1,100,0,10,0),
(27,1584860400,1,'trace',3,'The flag is hidden in this program somewhere! Use a bit of GDB magic to find it!\r\n\r\nHint: You don\'t have to reverse engineer too much for this challenge. If you\'re doing calculations or writing a program to automate stuff, there\'s an easier solution using GDB!',1,1584860400,2147483647,'ECS{C0NT41N5_TR4C35_0F_NUT5_CFB3076617138AD73D982181DF99C0B4}',0,1,100,0,10,0),
(28,1584860400,1,'xmem',3,'The flag is hidden in this program somewhere! Use a bit of GDB magic to find it!\r\n\r\nHint: You don\'t have to reverse engineer too much for this challenge. If you\'re doing calculations or writing a program to automate stuff, there\'s an easier solution using GDB!',1,1584860400,2147483647,'ECS{P3RP3TU4L_3PH3M3R4L1TY_E6A17148FCCFEC07C01D8EC92223539D}',0,1,125,0,10,0),
(29,1584860400,1,'reveng',3,'The flag is hidden in this program somewhere! You need to reverse engineer the program and figure out the flag!',1,1584860400,2147483647,'ECS{R00T_C4U53_EA397D13A6CFBF355207E69631C51D6E}',0,1,250,0,10,0),
(30,1584860400,1,'babybufov',3,'Basic buffer overflow challenge! Can you trick the program into running the [code single]target[/code] function?\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30005[/code].\r\n\r\n[i]NOTE:[/i] For consistent stack values, ALWAYS run the program using [code single]./noaslr ./babybufov[/code], including in GDB!',1,1584860400,2147483647,'ECS{W3_MU5T_G0_D33P3R_092664EEAFDF1225159D7FD9F73AC55A}',0,1,250,0,10,0),
(31,1584860400,1,'toddlerbufov',3,'Can you trick the program into running the [code single]target[/code] function, with the right arguments that you want?\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30006[/code].\r\n\r\n[i]NOTE:[/i] For consistent stack values, ALWAYS run the program using [code single]./noaslr ./toddlerbufov[/code], including in GDB!',1,1584860400,2147483647,'ECS{4RRRRRRRRG5_721544EE15523DA046E0872384D51416}',0,1,250,0,10,0),
(32,1584860400,1,'babyrop',3,'Time to do what you did earlier, but for 64-bit!\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30007[/code].\r\n\r\n[i]NOTE:[/i] For consistent stack values, ALWAYS run the program using [code single]./noaslr ./babyrop[/code], including in GDB!',1,1584860400,2147483647,'ECS{Y0U_5P1N_M3_4R0UND_A18E4C85FA30B0676BBCFAA815CC1CCD}',0,1,300,0,10,0),
(33,1584860400,1,'ropmelikeyoumeanit',3,'Gain code execution.\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30008[/code].\r\n\r\nNOTE: For consistent stack values, run the program using [code single]./noaslr ./ropmelikeyoumeanit[/code], including in GDB!',1,1584860400,2147483647,'ECS{Y0U_4R3_4_R0PP1NG_M45T3R_41C3D4446A05824798F249FF1D6F3BBF}',0,1,350,0,10,0),
(34,1584860400,1,'shellcode',3,'Write some shellcode!\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30009[/code].\r\n\r\n[i]Note:[/i] I won\'t be talking about shellcoding in class. For more information, check out [url=https://en.wikipedia.org/wiki/Shellcode]Wikipedia[/url]. I also find [url=https://defuse.ca/online-x86-assembler.htm]this online assembler[/url] useful when I\'m writing custom shellcode, although you might not need it.',1,1584860400,2147483647,'ECS{5345H3LL5_8Y_4_5345H0R3_A8C3601ADEF885959A6A64CE6E360B60}',0,1,150,0,10,0),
(35,1584860400,1,'guessme',3,'Good luck guessing my secure random number!\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30010[/code].\r\n\r\n[i]Note:[/i] I won\'t be talking about format string exploits in class. For more information, check out [url=https://en.wikipedia.org/wiki/Uncontrolled_format_string]Wikipedia[/url].',1,1584860400,2147483647,'ECS{PR1NTF_15_5C4R13R_TH4N_1T_533M5_652CB1EBBB215E3881D5115AE8939225}',0,1,100,0,10,0),
(36,1584860400,1,'writeme',3,'Try to change the [code single]is_admin[/code] variable.\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30011[/code].\r\n\r\n[i]Note:[/i] I won\'t be talking about format string exploits in class. For more information, check out [url=https://en.wikipedia.org/wiki/Uncontrolled_format_string]Wikipedia[/url].',1,1584860400,2147483647,'ECS{PR1NTF_C4N_4L50_5C4NF_6F63D4E0CD7295618A7AE9710695F255}',0,1,150,0,10,0),
(37,1584860400,1,'tinyuaf',3,'A very small use-after-free challenge.\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30012[/code].\r\n\r\n[i]Note:[/i] I won\'t be talking about use-after-free exploits, or anything heap related, in this course. If you\'re interested, you can read more about what a use-after-free is on [url=https://en.wikipedia.org/wiki/Use_after_free]Wikipedia[/url], and [url=https://youtu.be/ZHghwsTRyzQ]this YouTube video[/url] does a good job describing how it can be exploited.\r\n\r\nAlso, credit goes to [REDACTED] for developing this challenge!',1,1584860400,2147483647,'ECS{UN10N1Z3_E28D9CD3C88A713A4CD32D58927B89F3}',0,1,100,0,10,0),
(38,1584860400,1,'invtracker',3,'Hack the inventory.\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30013[/code].\r\n\r\n[i]Note:[/i] I won\'t be talking about use-after-free exploits, or anything heap related, in this course. You definitely need to understand use-after-free attacks for this challenge. Maybe check out the tinyuaf challenge first?',1,1584860400,2147483647,'ECS{H34P_TR4CK3R_83AB347A6945840804D7235A8BF919B9}',0,1,350,0,10,0),
(39,1584860400,1,'caesar',4,'KIY{IR4551I_54R4J_4784J3J26779G0I8G68I63I5I19GJ1GI}',1,1584860400,2147483647,'ECS{CL4551C_54L4D_4784D3D26779A0C8A68C63C5C19AD1AC}',0,1,75,0,10,0),
(40,1584860400,1,'substitution',4,'I have a random substitution cipher applied to a file. Use some frequency analysis techniques to figure out the flag! Instructions on where to find the flag is in the first line of the plaintext.',1,1584860400,2147483647,'ECS{C0H3R3NT_R350N4NC3_B4201B431351A3DE8CDD6600FE24B4C6}',0,1,275,0,10,0),
(41,1584860400,1,'vigenere',4,'The file is encrypted using a Vigenere cipher. Try to decrypt the file by guessing the key length and using frequency analysis. The instructions to get the flag is in the first line of the plaintext, similar to the substitution challenge.\r\nNote: When encrypting the plaintext message, I\'m ignoring nonalphabetic characters. As an example, if the key is "abc" and the plaintext is "hello world", I will match the key and plaintext as follows:\r\n\r\n[pre] PLAIN: hello world\r\n   KEY: abcab cabca\r\nCIPHER: hfnlp yosnd[/pre]',1,1584860400,2147483647,'ECS{5PR1NT1NG_K3Y_B032CDCB71FD9BEEC66B8374463AEA95}',0,1,225,0,10,0),
(42,1584860400,1,'dhke',4,'Pull off a Diffie-Hellman Key Exchange with the remote server using a plaintext protocol.\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30014[/code].',1,1584860400,2147483647,'ECS{H3R3_83_M4RL1N5P1K35_0030F47DD6D5452D1218A4321E4D344C}',0,1,200,0,10,0),
(43,1584860400,1,'rsadec',4,'I have a flag encrypted using an RSA public key. Here are the private key parameters.  and decrypt the flag.\r\n\r\nParameters:\r\n\r\nN=[code single]110267671414738970494525501170307930840512851744241760638602399682444271873453535741035734821975670983360359201501684238585962166901673721852027897764663364749008245038627577994373892745642468116144486422265242154930345472341761251401253398446958103175884730471353065769704142998448991521839595209975595991171[/code]\r\n\r\np=[code single]10620902203942110854782327308724124692152613609978162586044269224109610633179921111166522399215372792253474150369356436550953177866845014631090388398269007[/code]\r\n\r\nq=[code single]10382137910450906133180463149192381475813941743104549056738098639376418806110725741879527046001514352813053329422714004528192986028060989196380147714733453[/code]\r\n\r\ne=[code single]65537[/code]\r\n\r\nd=[code single]78190323420140522709638663508957537910192917684031968207228446801692939904224067518461520494481794740966516819692483176458593371992227004621930214457778581725782854988217576940472487043648963799864293522067456094141075466803580056459381619186371345218888714204185098117889941610744968642615923804678756327745[/code]\r\n\r\nCiphertext: [code single]64171892671552669650359659097510303639095063899650328433874975581971710734592386612832097271678708850386299303484379587672600632994504984383014999506043075344157894649357802908461923685062167235503423692336794213532512243602361726121149758658149485954406473542634914664099945539530104467498960596261337361265[/code].',1,1584860400,2147483647,'ECS{N0T_5P0N50R3D_8Y_TH3_R54_C0NF3R3NC3_7A936E84C18824C4450A5F03B75B4C2B}',0,1,100,0,10,0),
(44,1584860400,1,'rsarev',4,'I have a RSA public key and a flag encrypted with it. Break the public key and decrypt the message. I heard that the key was generated using some shady generator that makes the two factors of N really close together.\r\n\r\nParameters:\r\n\r\nN=[code single]146745185726391139084096400279522914769034126910073992862537045006016968215020160588729425809027406529611283457391889656385480713622114674277628794458614336989450024119799162816931452269029631188507324650456425294283543581426990826256363156528336586201326849342518616158569900901184077743109203464951387585033[/code]\r\n\r\ne=[code single]65537[/code]\r\n\r\nCiphertext: [code single]67499320416655058717301853648231936230077400733894242839882643282793194309912879223492728018278152327579605481088174283925221722887194350231255550369181054787763363223704783908006430560611053616648087787093258624987016758154959865246579709752028813105780605183910542830973628031842631849043652422444685655761[/code].\r\n\r\nNOTE: For this challenge, if you\'re using a math library in Python, beware of floating point errors in [code single]math[/code]! Maybe check out the [code single]decimal[/code] library if you need to have higher precision.',1,1584860400,2147483647,'ECS{L00K1NG_F0R_5P0N50R5H1P5_PL3453_53ND_M0N3Y_FB94A235B061514E83F43DB79C91BD91}',0,1,275,0,10,0),
(45,1584860400,1,'signing',4,'I have made a signing algorithm based on RSA. Only one of the flags is signed by my private key. Can you find it?\r\n\r\nTo sign the key, I hashed the flag using SHA512, considered that as a big endian number and "decrypt" that number using my private key. The file is formatted like [code single]FLAG signature_as_an_integer[/code]. My N=[code single]134159471276694609335468529984540213462174754066059581026665621949207962173095844364763109362700617771721453680389641691697424878717642030497684288785660499819910598840752820834085248385539154091771263251605651212407938795951114371523037452959409432753089566683862292804038755207477695524402887809448868860543[/code], and e=[code single]65537[/code].',1,1584860400,2147483647,'ECS{4_3V3N_81GG3R_H4Y5T4CK_37138C858B1D2CD5D15954BF992B213C}',0,1,150,0,10,0),
(46,1584860400,1,'authtoken',4,'The developer of this application thinks they\'re being clever by using custom tokens to enhance security. Prove them wrong.\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30015[/code].',1,1584860400,2147483647,'ECS{R4ND0M_CRN_0B998F4513BE152B98C8CCE0BC7829F7}',0,1,150,0,10,0),
(47,1584860400,1,'finalprivesc',5,'Our operatives have captured a member of the notorious criminal organiation, Redshift. We have extracted some credentials that\'s used by him to access one of Redshift\'s servers. Dig around and see what information you can find.\r\n\r\nSSH into [code single]finalprivesc@photon.rkevin.dev[/code], with password [code single]REDACTED[/code].',1,1584860400,2147483647,'ECS{3NUM3R4T3_35C4L4T3_3XF1LTR4T3_AF34E9A3E8C2786AAC61AF435B5F7F0C}',0,1,550,0,10,0),
(48,1584860400,1,'finalwebapp',5,'Using the information you found via privilege escalation, you have found Redshift\'s internal webapp used for tracking their criminal activities. See if you can exploit it and see what their plans are.\r\n\r\nClick [url=/webchal/finalwebapp]here[/url] to start the challenge.',1,1584860400,2147483647,'ECS{L4T3_T0_TH3_P4RTY_4C50E5F2291EF75D31BFE234253BE43E}',0,1,550,0,10,0),
(49,1584860400,1,'finalbinary',5,'Oh no! How the heck do they have a missile armed and ready?! Quick, put a stop to this ASAP! They have exposed their missile control interface. Hack your way in and disable the missile!\r\n\r\nConnect to [code single]photon.rkevin.dev[/code] port [code single]30016[/code].\r\n\r\n[i]NOTE:[/i] The binary is not provided. This is intentional, and you need to leak the binary yourself as part of the challenge. Also, the binary is not being run with [code single]noaslr[/code], but that shouldn\'t affect your exploit.',1,1584860400,2147483647,'ECS{R0D5_FR0M_G0D_5D83F300C88C987E09F971718BF7AE72}',0,1,550,0,10,0),
(50,1584860400,1,'finalcrypto',5,'Phew, that was close! Redshift\'s plans are in shambles. However, we still don\'t know who\'s behind it all. We have found the following cryptic note which is used by Redshift to recruit people for their operations. Find the breadcrumbs and figure out who\'s the mastermind behind everything.',1,1584860400,2147483647,'ECS{D3J0HN_VU_1E5642D125D521B176F1145B95A75BB3}',0,1,550,0,10,0),
(51,1584860400,1,'thankyou',5,'Thank you for checking out this CTF. I really hope you have learned something, and if you find this interesting, maybe consider going a bit deeper into computer security.\r\n\r\nAlso, to those who took this course with me in UCD, thanks for bearing with me through this experimental course. I know the class is much harder than most other CS courses, the challenges might cause technical difficulties and a ton of frustration (especially the noaslr stuff), and my lectures are more like ramblethons, so thanks for staying here till the very end.\r\n\r\nThe source code for all of the challenges, and the framework I created to fit all the challenges in, is available on [url=https://github.com/rkevin-arch/ECS189M]Github[/url]. You\'re free to take a look at how everything works under the hood, or adapt it for your own purposes. The solutions won\'t be public, and I ask that you refrain from posting solutions publicly, in case we reuse the challenges in future ECS153 courses in Davis. If you\'re interested in learning the solution for a challenge, send me an email and I can explain more.\r\n\r\n[code]ECS{TH4NK_Y0U_4ND_G00D8Y3_4B7FC4A4567D05295A1950B24279580C}[/code].\r\n\r\n-- rkevin',1,1584860400,2147483647,'ECS{TH4NK_Y0U_4ND_G00D8Y3_4B7FC4A4567D05295A1950B24279580C}',0,1,100,0,10,0);
